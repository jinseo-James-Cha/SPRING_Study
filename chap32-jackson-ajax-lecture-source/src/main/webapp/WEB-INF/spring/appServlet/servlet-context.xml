<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.greedy.jackson" />
	
	<!-- ResponseBody & MessageConverter 시작 -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:ref bean="jacksonMessageConverter"/>
		</beans:property>
	</beans:bean>
	<!-- ResponseBody & MessageConverter 끝 -->
	
	<!-- jsonView 등록 -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	
	<!-- Bean의 이름이 존재하면 해당 뷰를 사용하고 
		 존재하지않으면 기본 InternalResourceViewResolver를 사용한다.
		 우선순위를 통해서..
	 -->
	 <beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	 	<beans:property name="order" value="1"/>
	 </beans:bean>
	
	
</beans:beans>
