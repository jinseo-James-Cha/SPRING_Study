<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- context 스키마 추가해야한다. -->
	<context:property-placeholder location="connection-info.properties"/>
	
	<!-- 빈 스캐닝 basePackage 설정 -->
	<context:component-scan base-package="com.greedy.section01.programmatic"/>
	
	<!-- baseDataSource 빈 등록  -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${oracle.dev.driver}"/>
		<property name="url" value="${oracle.dev.url}"/>
		<property name="username" value="${oracle.dev.username}"/>
		<property name="password" value="${oracle.dev.password}"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	
	<!-- sqlSessionFactoryBean 빈 등록 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="com/greedy/section01/programmatic/config/mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- sqlSessionTemplate 빈 등록 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"/>
	</bean>
	
	<!-- 매퍼 스캔 등록 -->
	<mybatis-spring:scan base-package="com.greedy.section01.programmatic.model.dao"/>
	
	<!-- 트랜잭션 매니저 등록 -->
	<!-- 
		Connection의 트랜잭션 API를 이용해서 트랜잭션을 관리해주는 트랜잭션 매니져이다.
		이 트랜잭션 메니저를 사용하려면 트랜잭션을 적용할 DataSource가 스프링의 빈으로 등록돼어야 한다.
		JDBC API를 이용해서 트랜잭션을 관리하는 데이터 엑세스 기술인 JDBC의 iBatis SqlMap으로 만든 DAO에 적용할 수 있다.
		DataSourceTransactionManager를 빈으로 등록할 때는 
		다음과 같이 트랜잭션을 적용할 DAO가 사용하는 것과 동일한 DataSource를 빈으로 제공해줘야한다.
	 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	
</beans>
